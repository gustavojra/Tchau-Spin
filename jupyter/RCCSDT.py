import psi4
import os
import sys
import numpy as np
import time
import copy
np.set_printoptions(suppress=True, linewidth=120)

def update_energy(T1, T2, fock_OV, Voovv):

    # Note that these equations are obtianed automatically using Sympy and Tchau-Spin.
    # See the getting_CCSDT.ipynb notebook

    CC_energy = 0
    CC_energy += 2.0*np.einsum('ld, ld -> ', fock_OV, T1, optimize = 'optimal')
    B_OVOV = -1.0*np.einsum('md, le -> mdle', T1, T1, optimize = 'optimal')
    B_OVOV += -1.0*T2.transpose(0,2,1,3)
    B_OVOV += 2.0*T2.transpose(1,2,0,3)
    CC_energy += np.einsum('mdle, lmde -> ', B_OVOV, Voovv, optimize = 'optimal')
    CC_energy += 2.0*np.einsum('md, le, mlde -> ', T1, T1, Voovv, optimize = 'optimal')
    return CC_energy

def update_amp(T1, T2, T3, f, V, d, D, dD, info):

    Voooo, Vooov, Voovv, Vovov, Vovvv, Vvvvv = V
    fock_OO, fock_OV, fock_VV = f

    newT1 = np.zeros(T1.shape)
    newT2 = np.zeros(T2.shape)
    newT3 = np.zeros(T3.shape)


    # T1 equation
    newT1 += fock_OV
    newT1 -= np.einsum('il, la -> ia', fock_OO, T1, optimize = 'optimal')
    newT1 += np.einsum('da, id -> ia', fock_VV, T1, optimize = 'optimal')
    newT1 -= np.einsum('ld, id, la -> ia', fock_OV, T1, T1, optimize = 'optimal')
    newT1 += 2.0*np.einsum('ld, ilad -> ia', fock_OV, T2, optimize = 'optimal')
    newT1 -= np.einsum('ld, liad -> ia', fock_OV, T2, optimize = 'optimal')
    newT1 -= np.einsum('ld, idla -> ia', T1, Vovov, optimize = 'optimal')
    newT1 += 2.0*np.einsum('ld, lida -> ia', T1, Voovv, optimize = 'optimal')
    newT1 -= np.einsum('lide, laed -> ia', T2, Vovvv, optimize = 'optimal')
    newT1 += -2.0*np.einsum('lmad, lmid -> ia', T2, Vooov, optimize = 'optimal')
    newT1 += np.einsum('mlad, lmid -> ia', T2, Vooov, optimize = 'optimal')
    newT1 += -2.0*np.einsum('ld, ma, mlid -> ia', T1, T1, Vooov, optimize = 'optimal')
    newT1 += 2.0*np.einsum('ilde, laed -> ia', T2, Vovvv, optimize = 'optimal')
    newT1 -= np.einsum('ld, ie, laed -> ia', T1, T1, Vovvv, optimize = 'optimal')
    newT1 += 2.0*np.einsum('ld, ie, lade -> ia', T1, T1, Vovvv, optimize = 'optimal')
    newT1 += np.einsum('ld, ma, lmid -> ia', T1, T1, Vooov, optimize = 'optimal')
    newT1 += 1.5*np.einsum('ilmade, lmde -> ia', T3, Voovv, optimize = 'optimal')
    newT1 += 0.25*np.einsum('limdae, lmde -> ia', T3, Voovv, optimize = 'optimal')
    newT1 += -0.25*np.einsum('limade, lmde -> ia', T3, Voovv, optimize = 'optimal')
    newT1 += -0.5*np.einsum('imlade, lmde -> ia', T3, Voovv, optimize = 'optimal')
    newT1 += np.einsum('ma, ilde, lmde -> ia', T1, T2, Voovv, optimize = 'optimal')
    newT1 += np.einsum('ld, miae, mlde -> ia', T1, T2, Voovv, optimize = 'optimal')
    newT1 += np.einsum('id, mlae, lmde -> ia', T1, T2, Voovv, optimize = 'optimal')
    newT1 += -2.0*np.einsum('id, mlae, mlde -> ia', T1, T2, Voovv, optimize = 'optimal')
    newT1 += -0.25*np.einsum('limdae, mlde -> ia', T3, Voovv, optimize = 'optimal')
    newT1 += -2.0*np.einsum('ld, miae, lmde -> ia', T1, T2, Voovv, optimize = 'optimal')
    newT1 += -2.0*np.einsum('ld, imae, mlde -> ia', T1, T2, Voovv, optimize = 'optimal')
    newT1 += 4.0*np.einsum('ld, imae, lmde -> ia', T1, T2, Voovv, optimize = 'optimal')
    newT1 += np.einsum('ld, ie, ma, mlde -> ia', T1, T1, T1, Voovv, optimize = 'optimal')
    newT1 += -2.0*np.einsum('ld, ie, ma, lmde -> ia', T1, T1, T1, Voovv, optimize = 'optimal')
    newT1 += -2.0*np.einsum('ma, iled, lmde -> ia', T1, T2, Voovv, optimize = 'optimal')
    newT1 += 0.25*np.einsum('limade, mlde -> ia', T3, Voovv, optimize = 'optimal')
    
    # T2 equation
    newT2 += Voovv
    newT2 += np.einsum('la, mb, ijlm -> ijab', T1, T1, Voooo, optimize = 'optimal')
    newT2 += np.einsum('id, je, deab -> ijab', T1, T1, Vvvvv, optimize = 'optimal')
    newT2 += np.einsum('lmab, ijlm -> ijab', T2, Voooo, optimize = 'optimal')
    newT2 += np.einsum('ijde, deab -> ijab', T2, Vvvvv, optimize = 'optimal')
    newT2 -= np.einsum('id, je, la, lbde -> ijab', T1, T1, T1, Vovvv, optimize = 'optimal')
    newT2 -= np.einsum('id, je, lb, laed -> ijab', T1, T1, T1, Vovvv, optimize = 'optimal')
    newT2 += np.einsum('id, la, mb, mljd -> ijab', T1, T1, T1, Vooov, optimize = 'optimal')
    newT2 += np.einsum('jd, la, mb, lmid -> ijab', T1, T1, T1, Vooov, optimize = 'optimal')
    newT2 += -2.0*np.einsum('ilad, jmbe, mlde -> ijab', T2, T2, Voovv, optimize = 'optimal')
    newT2 += -2.0*np.einsum('mlad, ijeb, lmde -> ijab', T2, T2, Voovv, optimize = 'optimal')
    newT2 += np.einsum('lmad, ijeb, lmde -> ijab', T2, T2, Voovv, optimize = 'optimal')
    newT2 += np.einsum('liad, mjeb, mlde -> ijab', T2, T2, Voovv, optimize = 'optimal')
    newT2 += -2.0*np.einsum('ijad, lmbe, lmde -> ijab', T2, T2, Voovv, optimize = 'optimal')
    newT2 += np.einsum('ljad, imeb, mlde -> ijab', T2, T2, Voovv, optimize = 'optimal')
    newT2 += -2.0*np.einsum('ilad, mjbe, lmde -> ijab', T2, T2, Voovv, optimize = 'optimal')
    newT2 += 4.0*np.einsum('ilad, jmbe, lmde -> ijab', T2, T2, Voovv, optimize = 'optimal')
    newT2 += np.einsum('ilad, mjbe, mlde -> ijab', T2, T2, Voovv, optimize = 'optimal')
    newT2 += -2.0*np.einsum('liad, jmbe, lmde -> ijab', T2, T2, Voovv, optimize = 'optimal')
    newT2 += np.einsum('liad, mjbe, lmde -> ijab', T2, T2, Voovv, optimize = 'optimal')
    newT2 += np.einsum('ijad, mlbe, lmde -> ijab', T2, T2, Voovv, optimize = 'optimal')
    newT2 += np.einsum('id, je, mlab, mlde -> ijab', T1, T1, T2, Voovv, optimize = 'optimal')
    newT2 += np.einsum('id, je, la, mb, lmde -> ijab', T1, T1, T1, T1, Voovv, optimize = 'optimal')
    newT2 += np.einsum('ijed, mlab, lmde -> ijab', T2, T2, Voovv, optimize = 'optimal')
    newT2 += np.einsum('la, mb, ijed, mlde -> ijab', T1, T1, T2, Voovv, optimize = 'optimal')
    P_OOVV = 1.0*np.einsum('db, ijad -> ijab', fock_VV, T2, optimize = 'optimal')
    P_OOVV += -1.0*np.einsum('il, ljab -> ijab', fock_OO, T2, optimize = 'optimal')
    P_OOVV += -1.0*np.einsum('lb, jila -> ijab', T1, Vooov, optimize = 'optimal')
    P_OOVV += 1.0*np.einsum('jd, idab -> ijab', T1, Vovvv, optimize = 'optimal')
    P_OOVV += -1.0*np.einsum('ld, id, ljab -> ijab', fock_OV, T1, T2, optimize = 'optimal')
    P_OOVV += -1.0*np.einsum('ld, la, ijdb -> ijab', fock_OV, T1, T2, optimize = 'optimal')
    P_OOVV += 1.0*np.einsum('ld, ijlabd -> ijab', fock_OV, T3, optimize = 'optimal')
    P_OOVV += -1.0*np.einsum('ljbd, lida -> ijab', T2, Voovv, optimize = 'optimal')
    P_OOVV += -1.0*np.einsum('ildb, jdla -> ijab', T2, Vovov, optimize = 'optimal')
    P_OOVV += -1.0*np.einsum('id, la, ljdb -> ijab', T1, T1, Voovv, optimize = 'optimal')
    P_OOVV += -1.0*np.einsum('id, lb, jdla -> ijab', T1, T1, Vovov, optimize = 'optimal')
    P_OOVV += -1.0*np.einsum('ilad, jdlb -> ijab', T2, Vovov, optimize = 'optimal')
    P_OOVV += 2.0*np.einsum('jlbd, lida -> ijab', T2, Voovv, optimize = 'optimal')
    P_OOVV += 2.0*np.einsum('jd, ilae, lbed -> ijab', T1, T2, Vovvv, optimize = 'optimal')
    P_OOVV += 0.5*np.einsum('jildae, lbed -> ijab', T3, Vovvv, optimize = 'optimal')
    P_OOVV += -1.0*np.einsum('jd, liae, lbed -> ijab', T1, T2, Vovvv, optimize = 'optimal')
    P_OOVV += 1.0*np.einsum('jd, mlab, mlid -> ijab', T1, T2, Vooov, optimize = 'optimal')
    P_OOVV += -1.0*np.einsum('jd, ileb, lade -> ijab', T1, T2, Vovvv, optimize = 'optimal')
    P_OOVV += -0.5*np.einsum('ijldbe, lade -> ijab', T3, Vovvv, optimize = 'optimal')
    P_OOVV += -0.5*np.einsum('ljmabd, lmid -> ijab', T3, Vooov, optimize = 'optimal')
    P_OOVV += 0.5*np.einsum('ljmabd, mlid -> ijab', T3, Vooov, optimize = 'optimal')
    P_OOVV += -1.0*np.einsum('la, ijed, lbed -> ijab', T1, T2, Vovvv, optimize = 'optimal')
    P_OOVV += -1.0*np.einsum('jlmbad, lmid -> ijab', T3, Vooov, optimize = 'optimal')
    P_OOVV += 1.0*np.einsum('la, imdb, mljd -> ijab', T1, T2, Vooov, optimize = 'optimal')
    P_OOVV += -2.0*np.einsum('la, jmbd, lmid -> ijab', T1, T2, Vooov, optimize = 'optimal')
    P_OOVV += 1.0*np.einsum('la, mjdb, mlid -> ijab', T1, T2, Vooov, optimize = 'optimal')
    P_OOVV += 1.0*np.einsum('jilbde, laed -> ijab', T3, Vovvv, optimize = 'optimal')
    P_OOVV += 1.0*np.einsum('mb, liad, mljd -> ijab', T1, T2, Vooov, optimize = 'optimal')
    P_OOVV += -1.0*np.einsum('jd, ilae, lbde -> ijab', T1, T2, Vovvv, optimize = 'optimal')
    P_OOVV += -1.0*np.einsum('ld, ijae, lbed -> ijab', T1, T2, Vovvv, optimize = 'optimal')
    P_OOVV += 2.0*np.einsum('ld, ijeb, lade -> ijab', T1, T2, Vovvv, optimize = 'optimal')
    P_OOVV += 1.0*np.einsum('ld, mjab, lmid -> ijab', T1, T2, Vooov, optimize = 'optimal')
    P_OOVV += -2.0*np.einsum('ld, mjab, mlid -> ijab', T1, T2, Vooov, optimize = 'optimal')
    P_OOVV += 1.0*np.einsum('jlde, imab, lmde -> ijab', T2, T2, Voovv, optimize = 'optimal')
    P_OOVV += -2.0*np.einsum('ljde, imab, lmde -> ijab', T2, T2, Voovv, optimize = 'optimal')
    P_OOVV += -2.0*np.einsum('ld, ie, mjab, lmde -> ijab', T1, T1, T2, Voovv, optimize = 'optimal')
    P_OOVV += -2.0*np.einsum('id, la, jmbe, lmde -> ijab', T1, T1, T2, Voovv, optimize = 'optimal')
    P_OOVV += 1.0*np.einsum('id, la, mjbe, lmde -> ijab', T1, T1, T2, Voovv, optimize = 'optimal')
    P_OOVV += -1.0*np.einsum('ld, ijmabe, mlde -> ijab', T1, T3, Voovv, optimize = 'optimal')
    P_OOVV += 2.0*np.einsum('ld, ijmabe, lmde -> ijab', T1, T3, Voovv, optimize = 'optimal')
    P_OOVV += 1.0*np.einsum('ld, mb, ijae, mlde -> ijab', T1, T1, T2, Voovv, optimize = 'optimal')
    P_OOVV += -2.0*np.einsum('ld, mb, ijae, lmde -> ijab', T1, T1, T2, Voovv, optimize = 'optimal')
    P_OOVV += 1.0*np.einsum('ld, je, imab, mlde -> ijab', T1, T1, T2, Voovv, optimize = 'optimal')
    P_OOVV += 1.0*np.einsum('id, la, mjeb, mlde -> ijab', T1, T1, T2, Voovv, optimize = 'optimal')
    P_OOVV += 1.0*np.einsum('id, mb, ljae, lmde -> ijab', T1, T1, T2, Voovv, optimize = 'optimal')
    P_OOVV += -0.5*np.einsum('id, ljmabe, lmde -> ijab', T1, T3, Voovv, optimize = 'optimal')
    P_OOVV += -1.0*np.einsum('mb, ijlade, mlde -> ijab', T1, T3, Voovv, optimize = 'optimal')
    P_OOVV += -0.5*np.einsum('mb, jildae, mlde -> ijab', T1, T3, Voovv, optimize = 'optimal')
    P_OOVV += 0.5*np.einsum('mb, jildae, lmde -> ijab', T1, T3, Voovv, optimize = 'optimal')
    P_OOVV += -1.0*np.einsum('jd, ilmabe, lmde -> ijab', T1, T3, Voovv, optimize = 'optimal')
    P_OOVV += 0.5*np.einsum('jd, limbae, mlde -> ijab', T1, T3, Voovv, optimize = 'optimal')
    
    newT2 += P_OOVV + P_OOVV.transpose(1,0,3,2)


    # T3 equations
    newT3 += np.einsum('dc, ijkabd -> ijkabc', fock_VV, T3, optimize = 'optimal')
    newT3 += np.einsum('db, ijkadc -> ijkabc', fock_VV, T3, optimize = 'optimal')
    newT3 -= np.einsum('da, ijkcbd -> ijkabc', fock_VV, T3, optimize = 'optimal')
    newT3 -= np.einsum('kl, ijlabc -> ijkabc', fock_OO, T3, optimize = 'optimal')
    newT3 -= np.einsum('jl, ilkabc -> ijkabc', fock_OO, T3, optimize = 'optimal')
    newT3 += np.einsum('il, kjlabc -> ijkabc', fock_OO, T3, optimize = 'optimal')
    newT3 += np.einsum('ld, id, kjlabc -> ijkabc', fock_OV, T1, T3, optimize = 'optimal')
    newT3 -= np.einsum('ld, lc, ijkabd -> ijkabc', fock_OV, T1, T3, optimize = 'optimal')
    newT3 -= np.einsum('ld, lb, ijkadc -> ijkabc', fock_OV, T1, T3, optimize = 'optimal')
    newT3 += np.einsum('ld, la, ijkcbd -> ijkabc', fock_OV, T1, T3, optimize = 'optimal')
    newT3 -= np.einsum('ld, kd, ijlabc -> ijkabc', fock_OV, T1, T3, optimize = 'optimal')
    newT3 -= np.einsum('ld, jd, ilkabc -> ijkabc', fock_OV, T1, T3, optimize = 'optimal')
    newT3 += 0.5*np.einsum('ijkdbe, deac -> ijkabc', T3, Vvvvv, optimize = 'optimal')
    newT3 += np.einsum('ijkade, debc -> ijkabc', T3, Vvvvv, optimize = 'optimal')
    newT3 -= np.einsum('ilkabd, jdlc -> ijkabc', T3, Vovov, optimize = 'optimal')
    newT3 -= np.einsum('jklbad, lidc -> ijkabc', T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('ilmabc, jklm -> ijkabc', T3, Voooo, optimize = 'optimal')
    newT3 += -0.5*np.einsum('ljmabc, ikml -> ijkabc', T3, Voooo, optimize = 'optimal')
    newT3 -= np.einsum('kmlabc, ijlm -> ijkabc', T3, Voooo, optimize = 'optimal')
    newT3 -= np.einsum('ijladc, kdlb -> ijkabc', T3, Vovov, optimize = 'optimal')
    newT3 += np.einsum('ilkadc, ljdb -> ijkabc', T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('ilkacd, ljdb -> ijkabc', T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('ilkadc, jdlb -> ijkabc', T3, Vovov, optimize = 'optimal')
    newT3 += np.einsum('kjladc, idlb -> ijkabc', T3, Vovov, optimize = 'optimal')
    newT3 += 0.5*np.einsum('ljmabc, iklm -> ijkabc', T3, Voooo, optimize = 'optimal')
    newT3 += -0.5*np.einsum('ijkdbe, deca -> ijkabc', T3, Vvvvv, optimize = 'optimal')
    newT3 += np.einsum('ilkcbd, jdla -> ijkabc', T3, Vovov, optimize = 'optimal')
    newT3 += np.einsum('kjlcbd, lida -> ijkabc', T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('ijkced, deab -> ijkabc', T3, Vvvvv, optimize = 'optimal')
    newT3 -= np.einsum('mb, kjladc, lmid -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 += np.einsum('mb, ilkacd, mljd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 -= np.einsum('mb, ilkadc, mljd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 += np.einsum('mb, ilkadc, lmjd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 += np.einsum('mb, ijladc, lmkd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 += 2.0*np.einsum('ld, kjmabc, mlid -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 += -2.0*np.einsum('ld, imkabc, mljd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 -= np.einsum('lc, ijkade, lbed -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 -= np.einsum('id, je, lkac, lbde -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    newT3 += np.einsum('id, je, klac, lbde -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    newT3 -= np.einsum('ld, kjmabc, lmid -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 -= np.einsum('id, je, klcb, laed -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    newT3 += np.einsum('id, je, klab, lced -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    newT3 += np.einsum('lb, ijkcde, lade -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 -= np.einsum('la, imkcbd, mljd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 += -2.0*np.einsum('jlbd, ikce, lade -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    newT3 += np.einsum('ljdb, ikce, laed -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    newT3 += -2.0*np.einsum('kjdb, ilce, laed -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    newT3 += np.einsum('kjdb, lice, laed -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    newT3 += np.einsum('kjdb, ilce, lade -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    newT3 -= np.einsum('lb, ijkade, lcde -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 += np.einsum('ld, imkabc, lmjd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 += np.einsum('ld, ijmabc, lmkd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 -= np.einsum('la, kjmcbd, lmid -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 += np.einsum('ijdb, lkce, lade -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    newT3 += -2.0*np.einsum('ld, ijmabc, mlkd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 -= np.einsum('ld, ijkabe, lced -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 -= np.einsum('lb, mc, kjad, mlid -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    newT3 -= np.einsum('lb, mc, kiad, lmjd -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    newT3 += np.einsum('la, ijkcde, lbed -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 -= np.einsum('ikad, ljeb, lcde -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    newT3 += 2.0*np.einsum('ikad, jlbe, lced -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    newT3 -= np.einsum('ikad, ljbe, lced -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    newT3 -= np.einsum('lkad, ijeb, lced -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    newT3 += np.einsum('ld, ijkcbe, laed -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 -= np.einsum('ijad, kleb, lcde -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    newT3 += 2.0*np.einsum('ld, ijkaec, lbde -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 -= np.einsum('ld, ijkaec, lbed -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 += np.einsum('mc, jklbad, mlid -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 += np.einsum('mc, ilkabd, lmjd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 += 2.0*np.einsum('ld, ijkabe, lcde -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 += 2.0*np.einsum('ilad, kjeb, lcde -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    newT3 += -2.0*np.einsum('ld, ijkcbe, lade -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 -= np.einsum('liad, kjeb, lcde -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    newT3 -= np.einsum('ilad, kjeb, lced -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    newT3 += np.einsum('kldb, ijce, laed -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    newT3 += np.einsum('ljbd, ikce, lade -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    newT3 += np.einsum('jd, ilkcbe, lade -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 -= np.einsum('jd, ilkace, lbed -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 -= np.einsum('jd, ilkaec, lbde -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 += np.einsum('jd, ilkaec, lbed -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 += np.einsum('jd, ilmabc, mlkd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 -= np.einsum('jd, ilkabe, lcde -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 -= np.einsum('jd, klmabc, mlid -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 += np.einsum('la, mb, kjcd, lmid -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    newT3 += np.einsum('la, mb, kicd, mljd -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    newT3 += np.einsum('id, kjlaec, lbde -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 -= np.einsum('id, klmabc, lmjd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 -= np.einsum('kd, ijlaec, lbde -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 += np.einsum('id, kjlcbe, laed -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 += np.einsum('kd, ilmabc, lmjd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    newT3 -= np.einsum('id, jklbae, lced -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    newT3 += 1.5*np.einsum('ljab, imkcde, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('mjce, ilkabd, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += 2.0*np.einsum('ld, ie, kjmabc, lmde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('ld, ie, kjmabc, mlde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 += -2.0*np.einsum('ld, je, imkabc, lmde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('ld, je, imkabc, mlde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 += -2.0*np.einsum('ld, ke, ijmabc, lmde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('ld, ke, ijmabc, mlde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 += 2.0*np.einsum('ld, ma, ijkcbe, lmde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('ld, ma, ijkcbe, mlde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 += -2.0*np.einsum('ld, mb, ijkaec, lmde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('ld, mb, ijkaec, mlde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 += -2.0*np.einsum('ld, mc, ijkabe, lmde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('ld, mc, ijkabe, mlde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('mlab, ijkcde, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += -2.0*np.einsum('imce, jklbad, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('ikce, jmlbad, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('kjeb, ilmadc, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('kjeb, ilmacd, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('kmeb, ijladc, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('mlcb, ijkade, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('mjeb, ilkacd, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += -2.0*np.einsum('lmbe, ijkadc, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('imeb, kjladc, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('ijeb, klmadc, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('ijeb, klmacd, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('mjbe, ilkadc, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += 2.0*np.einsum('jmbe, ilkadc, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('mjbe, ilkadc, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('jmbe, ilkadc, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('mjbe, ilkacd, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += -2.0*np.einsum('jmbe, ilkacd, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('mlbe, ijkadc, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('imce, jklbad, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('mice, jklbad, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += -0.5*np.einsum('ijce, lkmbad, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += 0.5*np.einsum('ijce, lkmbad, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += -0.5*np.einsum('ljab, imkcde, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('mlce, ijkabd, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += -1.5*np.einsum('mjcb, ilkade, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += -2.0*np.einsum('mlce, ijkabd, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += 0.5*np.einsum('mjcb, ilkade, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += 0.5*np.einsum('lmac, ijkdbe, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += -0.5*np.einsum('mlac, ijkdbe, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('kd, mb, ijlaec, lmde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 += -0.5*np.einsum('la, mc, ijkdbe, mlde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 += 0.5*np.einsum('la, mc, ijkdbe, lmde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('la, mb, ijkcde, mlde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('id, mc, jklbae, mlde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('jd, mc, ilkabe, lmde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('jd, mb, ilkace, mlde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('jd, mb, ilkaec, mlde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('jd, mb, ilkaec, lmde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('jd, lb, mc, kiae, lmde -> ijkabc', T1, T1, T1, T2, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('jd, la, imkcbe, mlde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('jd, la, mb, kice, mlde -> ijkabc', T1, T1, T1, T2, Voovv, optimize = 'optimal')
    newT3 += np.einsum('jd, ke, ilmabc, lmde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('la, ijdb, mkce, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('la, mjbd, ikce, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    newT3 += -2.0*np.einsum('kled, ijmabc, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('kjed, ilmabc, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('jlde, imkabc, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += -2.0*np.einsum('ljde, imkabc, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += 0.5*np.einsum('ikde, ljmabc, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += -0.5*np.einsum('kide, ljmabc, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('ijed, klmabc, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += 2.0*np.einsum('iled, kjmabc, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('id, je, mc, klab, mlde -> ijkabc', T1, T1, T1, T2, Voovv, optimize = 'optimal')
    newT3 += np.einsum('klde, ijmabc, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('mc, lkad, ijeb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    newT3 += np.einsum('mc, ikad, ljeb, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    newT3 += -2.0*np.einsum('mc, ikad, jlbe, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    newT3 += np.einsum('mc, ikad, ljbe, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    newT3 += np.einsum('mc, ijad, kleb, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    newT3 += np.einsum('mc, ilad, kjeb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    newT3 += 2.0*np.einsum('mlad, ijkcbe, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('ljad, imkcbe, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('id, je, la, kmcb, lmde -> ijkabc', T1, T1, T1, T2, Voovv, optimize = 'optimal')
    newT3 += np.einsum('id, je, mb, lkac, lmde -> ijkabc', T1, T1, T1, T2, Voovv, optimize = 'optimal')
    newT3 += 0.5*np.einsum('ikad, ljmcbe, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += -0.5*np.einsum('ikad, ljmcbe, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('lmad, ijkcbe, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('id, je, mb, klac, lmde -> ijkabc', T1, T1, T1, T2, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('ijad, klmcbe, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('ilad, kjmcbe, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('liad, kjmcbe, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += 2.0*np.einsum('ilad, kjmcbe, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    newT3 += np.einsum('mc, liad, kjeb, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    newT3 += np.einsum('lb, mc, ijkade, lmde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('id, la, kjmcbe, lmde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('la, kmdb, ijce, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('id, mb, kjlaec, lmde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('la, kjdb, imce, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('la, kjdb, mice, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    newT3 += 2.0*np.einsum('la, kjdb, imce, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('la, mjdb, ikce, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    newT3 += 2.0*np.einsum('la, jmbd, ikce, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('id, lb, mc, kjae, mlde -> ijkabc', T1, T1, T1, T2, Voovv, optimize = 'optimal')
    newT3 += -2.0*np.einsum('mc, ilad, kjeb, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    newT3 += np.einsum('id, la, mb, kjce, lmde -> ijkabc', T1, T1, T1, T2, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('id, je, klmabc, mlde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 += 0.5*np.einsum('id, ke, ljmabc, lmde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 += -0.5*np.einsum('id, ke, ljmabc, mlde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    newT3 -= np.einsum('ilde, kjmabc, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV = 1.0*np.einsum('kicd, jdba -> ijkabc', T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('klcb, jila -> ijkabc', T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('ljcb, kila -> ijkabc', T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kjdb, idac -> ijkabc', T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('ijdb, kdca -> ijkabc', T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('ljab, iklc -> ijkabc', T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('ld, ljab, kicd -> ijkabc', fock_OV, T2, T2, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('lb, ijad, lkdc -> ijkabc', T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('la, kjcd, idlb -> ijkabc', T1, T2, Vovov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('la, kicd, ljdb -> ijkabc', T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('la, kmcb, ijlm -> ijkabc', T1, T2, Voooo, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('la, mjcb, iklm -> ijkabc', T1, T2, Voooo, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('la, kjdb, idlc -> ijkabc', T1, T2, Vovov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kd, ljcb, lida -> ijkabc', T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kd, ijeb, deca -> ijkabc', T1, T2, Vvvvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('id, ljcb, kdla -> ijkabc', T1, T2, Vovov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('id, klcb, jdla -> ijkabc', T1, T2, Vovov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('id, kjce, deab -> ijkabc', T1, T2, Vvvvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('jd, ikae, debc -> ijkabc', T1, T2, Vvvvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('jd, ilab, lkdc -> ijkabc', T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('jd, klcb, lida -> ijkabc', T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kd, ilab, jdlc -> ijkabc', T1, T2, Vovov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('lc, ijad, kdlb -> ijkabc', T1, T2, Vovov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('jilbad, lkdc -> ijkabc', T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('iklacd, ljdb -> ijkabc', T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('lc, ikad, ljdb -> ijkabc', T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('mc, ilab, jklm -> ijkabc', T1, T2, Voooo, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('mb, iklacd, mljd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('id, ke, ljcb, laed -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('id, ke, ljab, lcde -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('id, la, kjce, lbde -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('ljbd, kice, lade -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 2.0*np.einsum('jlbd, kice, lade -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('id, lb, kjce, laed -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('id, mb, lkac, mljd -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('ljdb, kice, laed -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kjdb, lice, lade -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('id, la, kjeb, lcde -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('ildb, kjce, laed -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('id, la, mjcb, mlkd -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 2.0*np.einsum('ijdb, klce, laed -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('ijdb, lkce, laed -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('ijdb, klce, lade -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('lb, mc, ikad, lmjd -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('lb, mc, ijad, mlkd -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('id, la, kmcb, mljd -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('mc, ijlabd, mlkd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('mlab, kicd, lmjd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('ilab, mjcd, mlkd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -2.0*np.einsum('ilab, kmcd, lmjd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('ilab, kmcd, mljd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('ilab, mkcd, lmjd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kjed, ilac, lbed -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kjed, ilab, lcde -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('ijed, klcb, lade -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('jd, iklace, lbed -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kd, la, ijeb, lced -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('jd, mc, ilab, mlkd -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kd, mb, ilac, mljd -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('jd, lc, ikae, lbed -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kd, lc, ijae, lbde -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kd, mc, ilab, lmjd -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kd, jilbae, lced -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    P_OVVOOV += 0.5*np.einsum('kjce, limbad, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('mkce, jilbad, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kmce, ijlabd, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 2.0*np.einsum('kmce, ijlabd, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -0.5*np.einsum('kjce, limbad, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kjce, ilmabd, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('ld, mjab, kice, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -2.0*np.einsum('ld, mjab, kice, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 0.5*np.einsum('lkac, ijmdbe, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -0.5*np.einsum('lkac, ijmdbe, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('lkac, jimbed, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kjeb, imlacd, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 0.5*np.einsum('ijeb, lkmacd, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -0.5*np.einsum('ijeb, lkmacd, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('mjbe, iklacd, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 2.0*np.einsum('jmbe, iklacd, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('mjeb, iklacd, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kd, ilab, mjce, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kd, mc, ijlabe, mlde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kd, lb, mc, ijae, mlde -> ijkabc', T1, T1, T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('la, ijdb, mkce, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -2.0*np.einsum('la, ijdb, kmce, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('la, imdb, kjce, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('la, ikde, mjcb, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('la, ijed, kmcb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('id, mlab, kjce, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('jd, mb, iklace, mlde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('jd, lb, mc, ikae, lmde -> ijkabc', T1, T1, T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('jd, ke, mc, ilab, lmde -> ijkabc', T1, T1, T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('jd, ke, mb, ilac, mlde -> ijkabc', T1, T1, T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -2.0*np.einsum('id, ljab, kmce, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('id, ljab, mkce, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('id, ljab, kmce, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('la, ijdb, kmce, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('la, mjbd, kice, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('mc, kjed, ilab, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('lb, ikad, mjce, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('la, mjdb, kice, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -2.0*np.einsum('la, jmbd, kice, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    
    newT3 += P_OVVOOV + P_OVVOOV.transpose(1,0,2,4,3,5)
    P_OVVOOV = -1.0*np.einsum('ijcd, kdab -> ijkabc', T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('ljcb, ikla -> ijkabc', T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kjdb, idca -> ijkabc', T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('klac, ijlb -> ijkabc', T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('liac, kjlb -> ijkabc', T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kjad, idcb -> ijkabc', T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('ld, ljab, ikcd -> ijkabc', fock_OV, T2, T2, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('ld, klab, ijcd -> ijkabc', fock_OV, T2, T2, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('ld, kiad, ljcb -> ijkabc', fock_OV, T2, T2, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kd, ijce, deab -> ijkabc', T1, T2, Vvvvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('lb, kiad, jdlc -> ijkabc', T1, T2, Vovov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('la, ikcd, ljdb -> ijkabc', T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('la, ijcd, kdlb -> ijkabc', T1, T2, Vovov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('la, mjcb, ikml -> ijkabc', T1, T2, Voooo, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kd, ilcb, jdla -> ijkabc', T1, T2, Vovov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('id, kjeb, deca -> ijkabc', T1, T2, Vvvvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('id, ljcb, lkda -> ijkabc', T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('jd, kiae, debc -> ijkabc', T1, T2, Vvvvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('jd, klab, lidc -> ijkabc', T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('jd, liac, kdlb -> ijkabc', T1, T2, Vovov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kd, ljab, lidc -> ijkabc', T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('jd, klac, idlb -> ijkabc', T1, T2, Vovov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('lb, kjad, lidc -> ijkabc', T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('jilbcd, lkda -> ijkabc', T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kjlabd, lidc -> ijkabc', T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('lb, ijcd, lkda -> ijkabc', T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('lb, ikcd, jdla -> ijkabc', T1, T2, Vovov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('mb, liac, jkml -> ijkabc', T1, T2, Voooo, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('mb, klac, ijlm -> ijkabc', T1, T2, Voooo, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('mb, kilacd, mljd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('id, ke, ljcb, lade -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('klac, imdb, mljd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('klac, mjbd, lmid -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('id, ke, ljab, lced -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 2.0*np.einsum('klac, jmbd, lmid -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('lmac, ijdb, lmkd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('mlac, kjdb, lmid -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('liac, mjbd, lmkd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 2.0*np.einsum('liac, jmbd, lmkd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('liac, mjdb, mlkd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('liac, kmdb, mljd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('la, ijmcbd, lmkd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('lkad, ijce, lbde -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('id, mb, klac, mljd -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('id, lb, kjae, lced -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('klac, mjdb, mlid -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('id, la, kjeb, lced -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('id, la, mjcb, lmkd -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kiad, ljce, lbde -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kiad, mlcb, lmjd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kiad, ljeb, lcde -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -2.0*np.einsum('kiad, jlbe, lced -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kiad, ljbe, lced -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('ljad, imcb, lmkd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('ljad, ikce, lbed -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -2.0*np.einsum('klad, ijce, lbde -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('klad, ijce, lbed -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('lkad, mjcb, mlid -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('klad, mjcb, lmid -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 2.0*np.einsum('klad, mjcb, mlid -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kjed, liac, lbed -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kide, ljcb, laed -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('ijed, klac, lbed -> ijkabc', T2, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('jd, lb, ikce, lade -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('jd, lb, kiae, lcde -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('jd, mb, liac, lmkd -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('jd, kilace, lbed -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kd, la, ijce, lbde -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kd, lb, ijce, laed -> ijkabc', T1, T1, T2, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kd, mb, liac, mljd -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kd, la, mjcb, mlid -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('jd, mb, klac, lmid -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('la, mb, ijcd, lmkd -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('la, mb, ikcd, mljd -> ijkabc', T1, T1, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kd, ijlcbe, laed -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('ld, mjab, ikce, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 0.5*np.einsum('ikce, ljmabd, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 2.0*np.einsum('ld, kmab, ijce, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('ld, kmac, ijeb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -2.0*np.einsum('klad, ijmcbe, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('lkad, ijmcbe, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('klad, ijmcbe, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('ld, kjae, imcb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 2.0*np.einsum('ld, kjae, imcb, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 2.0*np.einsum('ld, mjab, ikce, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -0.5*np.einsum('ikce, ljmabd, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 0.5*np.einsum('klac, ijmdbe, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('klac, jimbed, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -0.5*np.einsum('klac, ijmdbe, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('mjeb, kilacd, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('ijeb, kmlacd, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('mjbe, kilacd, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -2.0*np.einsum('jmbe, kilacd, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('id, klac, mjeb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 2.0*np.einsum('kd, ljab, imce, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 2.0*np.einsum('id, klae, mjcb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kd, mlab, ijce, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kd, ljae, imcb, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kd, la, ijmcbe, lmde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kd, la, mc, ijeb, lmde -> ijkabc', T1, T1, T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kd, ljab, mice, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kd, ljab, imce, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('id, kjae, mlcb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('la, kjed, imcb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('id, mc, kjlabe, mlde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('id, klae, mjcb, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('id, lkae, mjcb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('jd, la, mb, ikce, mlde -> ijkabc', T1, T1, T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('jd, ke, mb, liac, mlde -> ijkabc', T1, T1, T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('jd, ke, la, imcb, mlde -> ijkabc', T1, T1, T1, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('id, klac, mjbe, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 2.0*np.einsum('id, klac, jmbe, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('id, ljab, mkce, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('jd, klac, imeb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('jd, mlab, ikce, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('mc, klad, ijeb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 2.0*np.einsum('mc, klad, ijeb, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('mc, kjad, ileb, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('mc, kiad, ljeb, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 2.0*np.einsum('mc, kiad, jlbe, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('mc, kiad, ljbe, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('mc, lkad, ijeb, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('mc, liad, kjeb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kjad, ilmcbe, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -0.5*np.einsum('kjad, limbce, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 0.5*np.einsum('kjad, limbce, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('mc, kide, ljab, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('mc, ijed, klab, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    
    newT3 += P_OVVOOV + P_OVVOOV.transpose(1,0,2,3,5,4)
    P_OVVOOV = -0.5*np.einsum('imcb, jkldae, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 0.5*np.einsum('imcb, jkldae, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('imcb, kjlade, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    
    newT3 += P_OVVOOV + P_OVVOOV.transpose(0,2,1,4,3,5)
    P_OOVOVV = -1.0*np.einsum('ld, ikad, ljcb -> ijkabc', fock_OV, T2, T2, optimize = 'optimal')
    P_OOVOVV += 1.0*np.einsum('ikad, mlcb, lmjd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OOVOVV += 1.0*np.einsum('ljad, kmcb, lmid -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OOVOVV += -2.0*np.einsum('ilad, kmcb, mljd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OOVOVV += 1.0*np.einsum('ilad, kmcb, lmjd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OOVOVV += 1.0*np.einsum('liad, mjcb, mlkd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OOVOVV += -2.0*np.einsum('ld, ijae, kmcb, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OOVOVV += 1.0*np.einsum('ld, ikae, mjcb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OOVOVV += -1.0*np.einsum('ilab, kjmcde, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OOVOVV += -0.5*np.einsum('ilab, jkmdce, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OOVOVV += 0.5*np.einsum('ilab, jkmdce, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OOVOVV += 1.0*np.einsum('id, lkae, mjcb, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OOVOVV += 1.0*np.einsum('kd, ijae, mlcb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OOVOVV += 1.0*np.einsum('kd, liae, mjcb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OOVOVV += 1.0*np.einsum('kd, ilae, mjcb, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OOVOVV += -2.0*np.einsum('kd, ilae, mjcb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    
    newT3 += P_OOVOVV + P_OOVOVV.transpose(0,2,1,3,5,4)
    P_OVVOOV = -1.0*np.einsum('ld, ilac, kjdb -> ijkabc', fock_OV, T2, T2, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kjlcbd, idla -> ijkabc', T3, Vovov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kjlabd, idlc -> ijkabc', T3, Vovov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('lkac, imdb, mljd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('lkac, mjbd, lmid -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += -2.0*np.einsum('lkac, jmbd, lmid -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('mlac, ijdb, lmkd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('ilac, mjdb, mlkd -> ijkabc', T2, T2, Vooov, optimize = 'optimal')
    P_OVVOOV += 0.5*np.einsum('lc, ijkdbe, lade -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    P_OVVOOV += -0.5*np.einsum('lc, ijkdbe, laed -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('la, ijmcbd, mlkd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('la, kjmcbd, mlid -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kd, ijlcbe, lade -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    P_OVVOOV += 0.5*np.einsum('id, ljmabc, mlkd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    P_OVVOOV += -0.5*np.einsum('id, ljmabc, lmkd -> ijkabc', T1, T3, Vooov, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('id, kjlcbe, lade -> ijkabc', T1, T3, Vovvv, optimize = 'optimal')
    P_OVVOOV += -0.5*np.einsum('ljab, kimcde, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 0.5*np.einsum('ljab, ikmcde, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('mkce, ijlabd, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('lkad, ijmcbe, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('ld, mkac, ijeb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -2.0*np.einsum('ld, mkac, ijeb, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -0.5*np.einsum('mjcb, kilade, lmde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 0.5*np.einsum('ljab, kimcde, mlde -> ijkabc', T2, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kd, mc, ijlabe, lmde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += -1.0*np.einsum('kd, la, ijmcbe, mlde -> ijkabc', T1, T1, T3, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kd, ilac, mjeb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += -2.0*np.einsum('kd, ilac, jmbe, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kd, ilac, mjbe, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('kd, mlac, ijeb, lmde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    P_OVVOOV += 1.0*np.einsum('jd, lkac, imeb, mlde -> ijkabc', T1, T2, T2, Voovv, optimize = 'optimal')
    
    newT3 += P_OVVOOV + P_OVVOOV.transpose(2,1,0,5,4,3)

    newT1 *= d
    newT2 *= D
    newT3 *= dD

    # Compute RMS

    r1 = np.sqrt(np.sum(np.square(newT1 - T1 )))/(info['ndocc']*info['nvir'])
    r2 = np.sqrt(np.sum(np.square(newT2 - T2 )))/(info['ndocc']*info['nvir'])**2
    r3 = np.sqrt(np.sum(np.square(newT3 - T3 )))/(info['ndocc']*info['nvir'])**3

    return newT1, newT2, newT3, r1, r2, r3
    #return newT1, newT2, T3, r1, r2, 0

def get_integrals(wfn, info):

    print("\n Transforming integrals...")

    C = wfn.Ca()
    mints = psi4.core.MintsHelper(wfn.basisset())
    mints = mints
    # One electron integral
    h = np.asarray(mints.ao_kinetic()) + np.asarray(mints.ao_potential())
    ## Alpha
    h = np.einsum('up,vq,uv->pq', C, C, h)
    Vchem = np.asarray(mints.mo_eri(C, C, C, C))

    # Slices
    o = slice(0, info['ndocc'])
    v = slice(info['ndocc'], info['nmo'])

    # Form the full fock matrices
    f = h + 2*np.einsum('pqkk->pq', Vchem[:,:,o,o]) - np.einsum('pkqk->pq', Vchem[:,o,:,o])

    # Save diagonal terms
    fock_Od = copy.deepcopy(f.diagonal()[o])
    fock_Vd = copy.deepcopy(f.diagonal()[v])
    fd = (fock_Od, fock_Vd)

    # Erase diagonal elements from original matrix
    np.fill_diagonal(f, 0.0)

    # Save useful slices
    fock_OO = f[o,o]
    fock_VV = f[v,v]
    fock_OV = f[o,v]
    f = (fock_OO, fock_OV, fock_VV)

    # Save slices of two-electron repulsion integral
    Vphys = Vchem.swapaxes(1,2)

    V = (Vphys[o,o,o,o], Vphys[o,o,o,v], Vphys[o,o,v,v], Vphys[o,v,o,v], Vphys[o,v,v,v], Vphys[v,v,v,v])

    return fd, f, V

def RCCSDT(wfn, CC_CONV=6, CC_MAXITER=50, E_CONV=8):

    # Save reference wavefunction properties
    info = {}
    Ehf = wfn.energy() 
    info['nmo'] = wfn.nmo()
    info['nelec'] = wfn.nalpha() + wfn.nbeta()
    if info['nelec'] % 2 != 0:
        NameError('Invalid number of electrons for RHF') 
    info['ndocc'] = int(info['nelec']/2)
    info['nvir'] = info['nmo'] - info['ndocc']

    # Save Options
    CC_CONV = CC_CONV
    E_CONV = E_CONV
    CC_MAXITER = CC_MAXITER

    print("Number of electrons:              {}".format(info['nelec']))
    print("Number of Doubly Occupied MOs:    {}".format(info['ndocc']))
    print("Number of MOs:                    {}".format(info['nmo']))

    fd, f, V = get_integrals(wfn, info)

    # Auxiliar D matrix

    fock_Od, fock_Vd = fd
    new = np.newaxis
    D = 1.0/(fock_Od[:, new, new, new] + fock_Od[new, :, new, new] - fock_Vd[new, new, :, new] - fock_Vd[new, new, new, :])
    d = 1.0/(fock_Od[:, new] - fock_Vd[new, :])
    dD = 1.0/(fock_Od[:, new, new, new, new, new] + fock_Od[new, :, new, new, new, new] + fock_Od[new, new, :, new, new, new] \
    - fock_Vd[new, new, new, :, new, new] - fock_Vd[new, new, new, new, :, new] - fock_Vd[new, new, new, new, new, :])


    # Initial Amplitudes

    T1 = f[1]*d
    T2 = D*V[2]
    T3 = np.zeros((info['ndocc'], info['ndocc'], info['ndocc'], info['nvir'], info['nvir'], info['nvir']))

    # Get MP2 energy

    Ecc = update_energy(T1, T2, f[1], V[2])

    print('MP2 Energy:   {:<15.10f}'.format(Ecc + Ehf))

    # Setup iteration options
    r1 = 1
    r2 = 1
    r3 = 1
    dE = 1
    ite = 1
    rms_LIM = 10**(-CC_CONV)
    E_LIM = 10**(-E_CONV)
    t0 = time.time()
    print('='*37)

    # Start CC iterations
    while abs(dE) > E_LIM or rms > rms_LIM:
        t = time.time()
        if ite > CC_MAXITER:
            raise NameError('CC equations did not converge')
        T1, T2, T3, r1, r2, r3 = update_amp(T1, T2, T3, f, V, d, D, dD, info)
        rms = max(r1, r2, r3)
        dE = -Ecc
        Ecc = update_energy(T1, T2, f[1], V[2])
        dE += Ecc
        print("Iteration {}".format(ite))
        print("CC Correlation energy: {:< 15.10f}".format(Ecc))
        print("Energy change:         {:< 15.10f}".format(dE))
        print("Max RMS residue:       {:< 15.10f}".format(rms))
        print("Time required:         {:< 15.10f}".format(time.time() - t))
        print('='*37)
        ite += 1

    print('CCSDT Energy:   {:<15.10f}'.format(Ecc + Ehf))
    print('CCSDT iterations took %.2f seconds.\n' % (time.time() - t0))
    return (Ecc + Ehf)

if __name__ == '__main__':
    
    psi4.core.be_quiet()
    mol = psi4.geometry("""
    0 1
    O
    H 1 0.96
    H 1 0.96 2 104.5
    symmetry c1""")
    mol.update_geometry()

    psi4.set_options({
        'basis' : 'sto-3g',
        'scf_type' : 'pk',
        'e_convergence': 1e-12,
        'reference' : 'rhf'})

    Ehf, wfn = psi4.energy('scf', return_wfn = True)
    RCCSDT(wfn, CC_CONV = 8, E_CONV = 12)
    p4 = psi4.energy('ccsd')
    print('Psi4 Energy:   {:<15.10f}'.format(p4))
